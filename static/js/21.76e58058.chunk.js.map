{"version":3,"sources":["components/User/Profile.js","components/Layout/ContentWrapper.js","components/Common/TabPanel.js"],"names":["Profile","state","loading","activeTab","user","name","mobile","email","url","location","bio","company","role","imageUrl","password","oldPassword","newPassword","confirmNewPassword","errorMessage","image","saveProfile","e","preventDefault","axios","post","server_url","context_path","_this","then","res","swal","catch","err","updatePassword","length","pwd","setState","pwd1","bodyFormData","FormData","append","method","data","config","headers","Content-Type","resp","response","message","uploadImage","toggleTab","tab","_this2","this","get","res1","roles","props","id","loadUser","target","value","param","files","profile","_this3","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","_Layout_ContentWrapper__WEBPACK_IMPORTED_MODULE_8__","_Common_PageLoader__WEBPACK_IMPORTED_MODULE_7__","reactstrap__WEBPACK_IMPORTED_MODULE_9__","lg","className","src","alt","replace","_material_ui_core__WEBPACK_IMPORTED_MODULE_11__","position","_material_ui_core__WEBPACK_IMPORTED_MODULE_12__","indicatorColor","textColor","variant","scrollButtons","aria-label","onChange","i","_material_ui_core__WEBPACK_IMPORTED_MODULE_13__","label","_Common_TabPanel__WEBPACK_IMPORTED_MODULE_10__","index","hover","responsive","username","permissions","map","g","permission","description","react_moment__WEBPACK_IMPORTED_MODULE_18___default","format","creationDate","onSubmit","updateProfile","type","rows","_material_ui_core__WEBPACK_IMPORTED_MODULE_14__","imageChange","accept","data-input","data-classbutton","data-classinput","data-text","data-icon","updateOldPwd","updateNewPwd","Component","connect","settings","login","userObj","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","ContentWrapper","unwrap","children","defaultProps","TabStyles","makeStyles","theme","root","flexGrow","width","backgroundColor","palette","background","paper","other","Object","D_mscchemicals_admin_deploy_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_4__","assign","component","hidden","concat","aria-labelledby","_material_ui_core_Box__WEBPACK_IMPORTED_MODULE_5__","p","aria-controls"],"mappings":"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","file":"static/js/21.76e58058.chunk.js","sourcesContent":["import { server_url, context_path } from '../Common/constants';\r\nimport React, { Component } from 'react';\r\nimport PageLoader from '../Common/PageLoader';\r\nimport ContentWrapper from '../Layout/ContentWrapper';\r\n// import classnames from 'classnames';\r\nimport {\r\n    Row,\r\n    Col,\r\n    Table,\r\n   \r\n    Input,\r\n} from 'reactstrap';\r\n\r\nimport TabPanel from '../Common/TabPanel';\r\nimport { Button, Tab, Tabs, AppBar } from '@material-ui/core';\r\n\r\nimport swal from 'sweetalert';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport Moment from 'react-moment';\r\n\r\nclass Profile extends Component {\r\n\r\n    state = {\r\n        loading: false,\r\n        activeTab: 0,\r\n        user: {\r\n            name: '',\r\n            mobile: '',\r\n            email: '',\r\n            url: '',\r\n            location: '',\r\n            bio: '',\r\n            company: ''\r\n        },\r\n        role:{\r\n\r\n        },\r\n        imageUrl: 'img/user.jpg',\r\n        password: {\r\n            oldPassword: '',\r\n            newPassword: '',\r\n            confirmNewPassword: '',\r\n            errorMessage: ''\r\n        },\r\n        image: ''\r\n    }\r\n\r\n    loadUser() {\r\n        \r\n        axios.get(server_url + context_path + \"/user/profile\")\r\n            .then(res => {\r\n                if (typeof res.data.url === 'undefined') {\r\n                    res.data.url = '';\r\n                }\r\n                if (typeof res.data.company === 'undefined') {\r\n                    res.data.company = '';\r\n                }\r\n                if (typeof res.data.location === 'undefined') {\r\n                    res.data.location = '';\r\n                }\r\n                if (typeof res.data.bio === 'undefined') {\r\n                    res.data.bio = '';\r\n                }\r\n                this.setState({\r\n\r\n                    user: res.data\r\n\r\n                });\r\n\r\n                axios.get(server_url + context_path + \"/api/roles?projection=user_role_detail&code=\"+this.state.user.role)\r\n                .then(res1 => {\r\n                    this.setState({\r\n\r\n                            role: res1.data('_embedded').roles[0]\r\n                            \r\n                        });\r\n                    \r\n                });\r\n            });\r\n\r\n        axios.get(server_url + context_path + \"/user-images/\" + this.props.user.id)\r\n            .then(res => {\r\n                if (res.data && res.data.url) {\r\n                    this.setState({ imageUrl: res.data.url });\r\n                }\r\n            });\r\n    }\r\n\r\n    saveProfile = e => {\r\n        e.preventDefault();\r\n        axios.post(server_url + context_path + \"/user/profile\", this.state.user)\r\n            .then(res => {\r\n                swal(\"Successfully Updated!\", 'Success', \"success\");\r\n            }).catch(err => {\r\n                swal(\"Unable to Add!\", 'Error ', \"error\");\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadUser();\r\n    }\r\n\r\n    updateOldPwd(e) {\r\n        var pwd = this.state.password;\r\n        pwd.oldPassword = e.target.value;\r\n        this.setState({ password: pwd })\r\n    }\r\n\r\n    updateNewPwd(param, e) {\r\n        var pwd = this.state.password;\r\n        pwd[param] = e.target.value;\r\n        if (pwd.newPassword !== pwd.confirmNewPassword) {\r\n            pwd.errorMessage = 'New Password and confirm password not matching';\r\n        } else {\r\n            pwd.errorMessage = ''\r\n        }\r\n        if (this.state.password.newPassword.length < 6) {\r\n            pwd.errorMessage = 'New Password should contain minimum 6 characters';\r\n        }\r\n\r\n        this.setState({ password: pwd })\r\n    }\r\n\r\n    updatePassword = e => {\r\n        e.preventDefault();\r\n        if (this.state.password.newPassword.length < 6) {\r\n            var pwd = this.state.password;\r\n            pwd.errorMessage = 'New Password should contain minimum 6 characters';\r\n            this.setState({ password: pwd });\r\n            return;\r\n        }\r\n\r\n        if (this.state.password.newPassword !== this.state.password.confirmNewPassword) {\r\n            var pwd1 = this.state.password;\r\n            pwd1.errorMessage = 'New Password and confirm password not matching';\r\n            this.setState({ password: pwd1 });\r\n            return;\r\n        }\r\n        var bodyFormData = new FormData();\r\n        bodyFormData.append(\"oldPassword\", this.state.password.oldPassword);\r\n        bodyFormData.append(\"newPassword\", this.state.password.newPassword);\r\n\r\n        axios({\r\n            method: 'post',\r\n            url: server_url + context_path + 'user/password',\r\n            data: bodyFormData,\r\n            config: { headers: { 'Content-Type': 'application/x-www-form-urlencoded' } }\r\n        })\r\n            .then((resp) => {\r\n                swal(\"Successfully Updated!\", 'Success', \"success\");\r\n            })\r\n            .catch(function (err) {\r\n                swal(\"Unable to Update!\", err.response.data.message, \"error\");\r\n            });\r\n    }\r\n\r\n    imageChange(e) {\r\n        if (e.target.files && e.target.files[0]) {\r\n            this.setState({ image: e.target.files[0] });\r\n        }\r\n    }\r\n\r\n    uploadImage = e => {\r\n        e.preventDefault();\r\n\r\n        if (this.state.image) {\r\n            var bodyFormData = new FormData();\r\n            bodyFormData.append(\"image\", this.state.image);\r\n\r\n            axios({\r\n                method: 'post',\r\n                url: server_url + context_path + 'user/image',\r\n                data: bodyFormData,\r\n                config: { headers: { 'Content-Type': 'application/x-www-form-urlencoded' } }\r\n            })\r\n                .then((res) => {\r\n                    this.setState({ image: '', imageUrl: res.data.url });\r\n                    swal(\"Successfully Updated!\", 'Success', \"success\");\r\n                })\r\n                .catch(function (err) {\r\n                    swal(\"Unable to Update!\", err.response ? err.response.data.message : err.message, \"error\");\r\n                });\r\n        } else {\r\n            swal(\"Image required!\", 'Please upload image to update', \"warning\");\r\n        }\r\n    }\r\n\r\n    updateProfile(param, e) {\r\n        var profile = this.state.user;\r\n        profile[param] = e.target.value;\r\n        this.setState({ user: profile })\r\n    }\r\n\r\n    toggleTab = (tab) => {\r\n        if (this.state.activeTab !== tab) {\r\n            this.setState({\r\n                activeTab: tab\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ContentWrapper>\r\n                {this.state.loading && <PageLoader />}\r\n                <Row>\r\n                    <Col lg=\"4\">\r\n                        <div className=\"card card-default\">\r\n                            <div className=\"card-body text-center\">\r\n                                <div className=\"py-4\">\r\n                                    <img className=\"img-fluid rounded-circle img-thumbnail thumb96\" src={this.state.imageUrl} alt=\"Contact\" />\r\n                                </div>\r\n                                <h3 className=\"m-0 text-bold\">{this.props.user.name}</h3>\r\n                                <div className=\"my-3\">\r\n                                    <p>{this.props.user.role.replace('ROLE_', '')}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Col>\r\n                    <Col lg=\"8\">\r\n                        <AppBar position=\"static\">\r\n                            <Tabs\r\n                                className=\"bg-white\"\r\n                                indicatorColor=\"primary\"\r\n                                textColor=\"primary\"\r\n                                variant=\"scrollable\"\r\n                                scrollButtons=\"auto\"\r\n                                aria-label=\"scrollable auto tabs example\"\r\n                                value={this.state.activeTab}\r\n                                onChange={(e, i) => this.toggleTab(i)} >\r\n                                <Tab label=\"Profile\" />\r\n                                <Tab label=\"Update\" />\r\n                                <Tab label=\"Image\" />\r\n                                <Tab label=\"Password\" />\r\n                            </Tabs>\r\n                        </AppBar>\r\n                        <TabPanel value={this.state.activeTab} index={0}>\r\n                            {this.state.user &&\r\n                                <Table hover responsive className=\"table\">\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td>\r\n                                                <strong>Name</strong>\r\n                                            </td>\r\n                                            <td>{this.state.user.name}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>\r\n                                                <strong>Phone</strong>\r\n                                            </td>\r\n                                            <td>{this.state.user.mobile}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>\r\n                                                <strong>Email</strong>\r\n                                            </td>\r\n                                            <td>{this.state.user.email}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>\r\n                                                <strong>User Name</strong>\r\n                                            </td>\r\n                                            <td>{this.state.user.username}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>\r\n                                                <strong>Role</strong>\r\n                                            </td>\r\n                                            <td>{this.state.user.role ? this.state.user.name.replace('ROLE_', '') : ''}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>\r\n                                                <strong>Permissions</strong>\r\n                                            </td>\r\n                                            <td>\r\n                                                <ul>\r\n                                                {this.state.user.role ? this.state.user.role.permissions.map(g=>g.permission.description).map(g=>{\r\n                                                return (<li>{g}</li>)\r\n    }): ''}</ul>\r\n                                            \r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>\r\n                                                <strong>Account Created On</strong>\r\n                                            </td>\r\n                                            <td><Moment format=\"DD MMM YY HH:mm\">{this.state.user.creationDate}</Moment></td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </Table>}\r\n                        </TabPanel>\r\n\r\n                        <TabPanel value={this.state.activeTab} index={1}>\r\n                            <form onSubmit={this.saveProfile} className=\"col-md-8 offset-md-2\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Name</label>\r\n                                    <Input value={this.state.user.name} onChange={e => this.updateProfile('name', e)} type=\"text\" />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Bio</label>\r\n                                    <textarea value={this.state.user.bio} onChange={e => this.updateProfile('bio', e)} className=\"form-control\" rows=\"3\"></textarea>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>URL</label>\r\n                                    <Input value={this.state.user.url} onChange={e => this.updateProfile('url', e)} className=\"form-control\" type=\"text\" />\r\n                                </div>\r\n                                <Button className=\"btn btn-raised btn-info\" type=\"submit\">Update Profile</Button>\r\n                            </form>\r\n                        </TabPanel>\r\n\r\n                        <TabPanel value={this.state.activeTab} index={2}>\r\n                            <form onSubmit={this.uploadImage} className=\"col-md-8 offset-md-2\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Picture</label>\r\n                                    <Input className=\"form-control filestyle\" onChange={e => this.imageChange(e)} type=\"file\" accept=\"image/*\" data-input=\"false\" data-classbutton=\"btn btn-secondary\" data-classinput=\"form-control inline\" data-text=\"Upload new picture\" data-icon=\"&lt;span class='fa fa-upload mr-2'&gt;&lt;/span&gt;\" />\r\n                                </div>\r\n                                <Button className=\"btn btn-raised btn-info\" type=\"submit\">Upload</Button>\r\n                            </form>\r\n                        </TabPanel>\r\n\r\n                        <TabPanel value={this.state.activeTab} index={3}>\r\n                            <form onSubmit={this.updatePassword} className=\"col-md-8 offset-md-2\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Current password</label>\r\n                                    <Input className=\"form-control\" type=\"password\" value={this.state.password.oldPassword} onChange={e => this.updateOldPwd(e)} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>New password</label>\r\n                                    <Input className=\"form-control\" type=\"password\" value={this.state.password.newPassword} onChange={e => this.updateNewPwd('newPassword', e)} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Confirm new password</label>\r\n                                    <Input className=\"form-control\" type=\"password\" value={this.state.password.confirmNewPassword} onChange={e => this.updateNewPwd('confirmNewPassword', e)} />\r\n                                </div>\r\n                                <p>\r\n                                    {this.state.password.errorMessage}\r\n                                </p>\r\n\r\n                                <Button className=\"btn btn-raised btn-info\" type=\"submit\">Update password</Button>\r\n                            </form>\r\n                        </TabPanel>\r\n                    </Col>\r\n                </Row>\r\n            </ContentWrapper>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({ settings: state.settings, user: state.login.userObj })\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(Profile);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * Wrapper element for template content\r\n */\r\nconst ContentWrapper = props =>(\r\n    <div className=\"content-wrapper\">\r\n        {props.unwrap ?\r\n            (<div className=\"unwrap\">{props.children}</div>)\r\n            :\r\n            (props.children)\r\n        }\r\n    </div>\r\n)\r\n\r\nContentWrapper.propTypes = {\r\n    /** add element with 'unwrap' class to expand content area */\r\n    unwrap: PropTypes.bool\r\n}\r\nContentWrapper.defaultProps = {\r\n    unwrap: false\r\n}\r\n\r\nexport default ContentWrapper;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box'\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`scrollable-auto-tabpanel-${index}`}\n            aria-labelledby={`scrollable-auto-tab-${index}`}\n            {...other}\n        >\n            {value === index && <Box className=\"bg-white\" p={3}>{children}</Box>}\n        </Typography>\n    );\n}\n\nfunction a11yProps(index) {\n    return {\n        id: `scrollable-auto-tab-${index}`,\n        'aria-controls': `scrollable-auto-tabpanel-${index}`,\n    };\n}\n\nconst TabStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n        width: '100%',\n        backgroundColor: theme.palette.background.paper,\n    },\n}));\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nexport default connect()(TabPanel, a11yProps, TabStyles);"],"sourceRoot":""}