{"version":3,"sources":["components/Public/Mobile.js"],"names":["Recover","state","loading","email","otp","otpSent","password","cnfPassword","mobileChange","e","_this","setState","target","value","otpChange","passwordChange","cnfPasswordChange","onSubmit","preventDefault","fetch","server_url","context_path","method","then","response","json","data","console","log","loginError","message","catch","error","headers","Content-Type","body","JSON","stringify","status","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","href","src","alt","this","reactstrap__WEBPACK_IMPORTED_MODULE_7__","type","name","placeholder","disabled","onChange","data-validate","minLength","maxLength","pattern","required","id","react_router_dom__WEBPACK_IMPORTED_MODULE_6__","to","Component","connect","loginStatus","login","dispatch","actions","bindActionCreators"],"mappings":"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","file":"static/js/10.969f8564.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {  Link } from 'react-router-dom';\r\nimport { Input } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/actions/actions';\r\n// import FormValidator from '../Forms/FormValidator.js';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport { server_url, context_path} from '../Common/constants';\r\n\r\nclass Recover extends Component {\r\n\r\n    state = {\r\n        loading: false,\r\n        email: '',\r\n        otp: '',\r\n        otpSent: false,\r\n        password: '',\r\n        cnfPassword: '',\r\n    }\r\n\r\n\r\n\r\n    mobileChange = e => {\r\n        this.setState({email: e.target.value});\r\n    }\r\n\r\n    otpChange = e => {\r\n        this.setState({otp: e.target.value});\r\n    }\r\n\r\n    passwordChange = e => {\r\n        this.setState({password: e.target.value});\r\n    }\r\n\r\n    cnfPasswordChange = e => {\r\n        this.setState({cnfPassword: e.target.value});\r\n    }\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if(this.state.otpSent) {\r\n            if(this.state.password === this.state.cnfPassword) {\r\n                fetch(server_url + context_path+'save-new-password?email='+this.state.email+'&emailToken='+\r\n                this.state.otp+\"&chgPassword=\"+this.state.password+\"&cnfPassword=\"+this.state.cnfPassword,\r\n                    {\r\n                        method: \"POST\",\r\n                        \r\n                       \r\n                    })\r\n                    .then(response => {\r\n                        return response.json()\r\n                    })\r\n                    .then(data => {\r\n                        console.log(data);\r\n                        this.setState({ loginError: data.message });\r\n                    })\r\n                    .catch(error => {\r\n                        this.setState({ loginError: 'Error while processing' });\r\n                    });\r\n                } else {\r\n                    this.setState({ loginError: 'Entered password & confirm passwords are not same.' });\r\n                }\r\n        } else {\r\n            fetch(server_url + context_path + 'forgot-password?userName='+this.state.email,\r\n                {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({email: this.state.email})\r\n                })\r\n                .then(response => {\r\n                    return response.json()\r\n                })\r\n                .then(data => {\r\n                    if (data.status === 201) {\r\n                        this.setState({otpSent: true});\r\n                        this.setState({ loginError: data.message });\r\n                    } else {\r\n                        this.setState({ loginError: data.message });\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    this.setState({ loginError: 'Error while processing' });\r\n                });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const CSS = \".card img {height: 34px}\";\r\n\r\n        return (\r\n            <div className=\"block-center mt-4 wd-xl\">\r\n                <style>{CSS}</style>\r\n                {/* START card */}\r\n                <div className=\"card card-flat\">\r\n                    <div className=\"card-header text-center bg-default\">\r\n                        <a href=\"#s\">\r\n                            <img className=\"block-center rounded\" src=\"img/logo.png\" alt=\"Logo\"/>\r\n                        </a>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <p className=\"text-center py-2\">PASSWORD RESET</p>\r\n                        <form onSubmit={this.onSubmit}>\r\n                            <p className=\"text-center d-none\">Fill with your mail to receive instructions on how to reset your password.</p>\r\n                            <div className=\"form-group\">\r\n                                <label className=\"text-muted\">Email</label>\r\n                                <div className=\"input-group with-focus\">\r\n                                <Input type=\"text\"\r\n                                        name=\"email\"\r\n                                        className=\"border-right-0\"\r\n                                        placeholder=\"Enter email\"\r\n                                        disabled={this.state.otpSent}\r\n                                       onChange={this.mobileChange}\r\n                                        data-validate='[\"required\", \"email\"]'\r\n                                        value={this.state.email}\r\n                                        minLength=\"5\" maxLength=\"100\" />\r\n                                    <div className=\"input-group-append\">\r\n                                        <span className=\"input-group-text text-muted bg-transparent border-left-0\">\r\n                                            <em className=\"fa fa-mobile\"></em>\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {this.state.otpSent && \r\n                            <div className=\"form-group\">\r\n                                <label className=\"text-muted\">OTP</label>\r\n                                <div className=\"input-group with-focus\">\r\n                                    <Input type=\"text\"\r\n                                        name=\"otp\"\r\n                                        className=\"border-right-0\"\r\n                                        placeholder=\"Enter OTP\"\r\n                                        onChange={this.otpChange}\r\n                                        data-validate='[\"required\", \"number\"]'\r\n                                        value={this.state.otp}\r\n                                        minLength=\"4\" \r\n                                        maxLength=\"4\" \r\n                                        pattern=\"\\d*\" required />\r\n                                    <div className=\"input-group-append\">\r\n                                        <span className=\"input-group-text text-muted bg-transparent border-left-0\">\r\n                                            <em className=\"fa fa-key\"></em>\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>}\r\n                            {this.state.otpSent && \r\n                            <div className=\"form-group\">\r\n                                <label className=\"text-muted\">New Password</label>\r\n                                <div className=\"input-group with-focus\">\r\n                                    <Input type=\"password\"\r\n                                        id=\"id-password\"\r\n                                        name=\"password\"\r\n                                        className=\"border-right-0\"\r\n                                        placeholder=\"New Password\"\r\n                                        onChange={this.passwordChange}\r\n                                        data-validate='[\"required\"]'\r\n                                        value={this.state.password}\r\n                                        minLength=\"5\" maxLength=\"50\"\r\n                                        required\r\n                                    />\r\n                                    <div className=\"input-group-append\">\r\n                                        <span className=\"input-group-text text-muted bg-transparent border-left-0\">\r\n                                            <em className=\"fa fa-lock\"></em>\r\n                                        </span>\r\n                                    </div>\r\n                                    <span className=\"invalid-feedback\">Field is required</span>\r\n                                </div>\r\n                            </div>}\r\n                            {this.state.otpSent && \r\n                            <div className=\"form-group\">\r\n                                <label className=\"text-muted\">Confirm Password</label>\r\n                                <div className=\"input-group with-focus\">\r\n                                    <Input type=\"password\"\r\n                                        id=\"id-password1\"\r\n                                        name=\"password1\"\r\n                                        className=\"border-right-0\"\r\n                                        placeholder=\"Confirm Password\"\r\n                                        onChange={this.cnfPasswordChange}\r\n                                        data-validate='[\"required\"]'\r\n                                        value={this.state.cnfPassword}\r\n                                        minLength=\"5\" maxLength=\"50\"\r\n                                        required\r\n                                    />\r\n                                    <div className=\"input-group-append\">\r\n                                        <span className=\"input-group-text text-muted bg-transparent border-left-0\">\r\n                                            <em className=\"fa fa-lock\"></em>\r\n                                        </span>\r\n                                    </div>\r\n                                    <span className=\"invalid-feedback\">Field is required</span>\r\n                                </div>\r\n                            </div>}\r\n\r\n                            <p>{this.state.loginError}</p>\r\n                            <button className=\"btn btn-primary btn-block\" type=\"submit\">\r\n                                {this.state.otpSent ? 'Update Password' : 'Send OTP'}\r\n                            </button>\r\n                        </form>\r\n                    </div>\r\n                    <div className=\"card-footer text-center\">\r\n                        <Link to=\"login\" className=\"text-muted\">Back to Login</Link>\r\n                    </div>\r\n                </div>\r\n                {/* END card */}\r\n                <div className=\"p-3 text-center\">\r\n                    <span className=\"mr-2\">&copy;</span>\r\n                    <span>2019</span>\r\n                    <span className=\"mx-2\">-</span>\r\n                    <span>SMS Panel</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nRecover.propTypes = {\r\n    actions: PropTypes.object,\r\n    settings: PropTypes.object\r\n};\r\n\r\nconst mapStateToProps = state => ({ loginStatus: state.login })\r\nconst mapDispatchToProps = dispatch => ({ actions: bindActionCreators(actions, dispatch) })\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Recover);"],"sourceRoot":""}